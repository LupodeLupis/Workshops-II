1.	Discuss why the operator+ should return a Fraction object and not a reference to a Fraction object.
	First of all, declaring the memember operator as a quesry member function means that the design 
	of the code is not going to change the state of the object. Futhermore, the binary operator return a copy of a temporary object which 
	is created and destroyed respectivetly after  the sum of object a + b and b + d called called from the main function are executed.

2.	Identify the temporary objects in the tester module.
	(a + b)
	(b + d)
	(b += d)
	

3.	Identify the simplifications that you made to your class without affecting the in-terface to the client code.
	// Declare private member functions
		
	int max() const;
		
	int min() const;
		
	void reduce();
		
	int gcd() const;


4.	Explain what you have learned in this workshop.
	In this section I learnet hiot deal with  the memeber operator overloaded trough member function and how the temporary object are created
	I have have also learnt  how to simplify the code using fuctions defined as private. This allow me to call function from the cpp file without interfering
	with the main.cpp file.


No Quiz on Moday the 9th because was BH.


Reviewed Quiz 5 reflection ( in lab) 
The names of the class, namespace were incrrectly spelled.

default value of construct Parameter : solved
definition of Decontruct : solved
name spelled: solved
	
// header file:
#ifndef QUIZ05_VIDEOGAME_H
#define  QUIZ05_VIDEOGAME_H

namespace quiz5{

class videoGame{
char* name;
int size;

public:
videoGame();
videoGame(char name, int nameOne  = 10);
~ videoGame ();
};

}
#endif

// cpp.file
#include "videoGame.h"

using namespace quiz5{
videoGame:: videoGame(){

name = nullptr;
size = 0;

}
videoGame:: videoGame(char name, int nameOne  = 10){};
videoGame:: ~videoGame{

delete [] name;

};
}
